stock_table = stock_table %>%
separate('Date', c('year', 'month', 'date'), '\\-')
View(stock_table)
stock_table
summarised_stock_table = stock_table %>%
group_by(Code, Marcap) %>%
dplyr::summarise(mean_marcap = mean(Marcap))
View(summarised_stock_table)
View(stock_table)
summarised_stock_table = stock_table %>%
group_by(Code, year) %>%
dplyr::summarise(mean_marcap = mean(Marcap))
# 보고서 목록에 시가총액 열 추가
reports1$marcap = 0
summarised_marcap = stock_table %>%
group_by(Code, year) %>%
dplyr::summarise(mean_marcap = mean(Marcap))
# 보고서 목록에 시가총액 열 추가
reports1$marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = (
summarised_marcap %>%
filter(year == reports1[i,]$report_year &
Code == reports1[i,]$stock_code) %>%
slice(1)
)$mean_marcap
# 주가 데이터가 없는 경우도 있음
if (length(mean_marcap) == 0) {
reports1[i, 'forign_own_percent_mean'] = NA
} else {
reports1[i, 'forign_own_percent_mean'] = mean_marcap
}
}
colnames(reports1)
for (i in 1:nrow(reports1)) {
mean_marcap = (
summarised_marcap %>%
filter(year == reports1[i,]$report_year &
Code == reports1[i,]$stock_code) %>%
slice(1)
)$mean_marcap
# 주가 데이터가 없는 경우도 있음
if (length(mean_marcap) == 0) {
reports1[i, 'mean_marcap'] = NA
} else {
reports1[i, 'mean_marcap'] = mean_marcap
}
}
i = 1
corp_code = reports1[i, ]$corp_code
report_year = reports1[i, ]$
with(reports1, )
report_year = reports1[i, ]$report_year
with(reports1, corp_code == corp_code & report_year == report_year)
reports1[reports1$corp_code == corp_code &
reports1$report_year == report_year]
reports1[reports1$corp_code == corp_code &
reports1$report_year == report_year]
reports1[reports1$corp_code == corp_code &
reports1$report_year == report_year, ]
reports1[reports1$corp_code == reports1[i,]$corp_code &
reports1$report_year == reports1[i,]$report_year,]
reports1[reports1$corp_code == reports1[i,]$corp_code,]
View(reports1)
reports1[reports1$corp_code == reports1[i,]$corp_code,]
length(reports1[reports1$corp_code == reports1[i,]$corp_code,])
nrow(reports1[reports1$corp_code == reports1[i,]$corp_code,])
reports1[reports1$corp_code == reports1[i,]$corp_code,]
reports1[reports1$corp_code == reports1[i,]$corp_code,]
reports1[reports1$corp_code == reports1[i,]$corp_code,]
reports1$normed_n = 0
n_weight = reports1[i,]$n_weight
n_weights = reports1[reports1$corp_code == reports1[i,]$corp_code,]$n_weight
reports1[i, 'normed_n'] = (n_weight - min(n_weights)) / (max(n_weights) -
min(n_weights))
reports1$normed_n = 0
for (i in 1:length(reports1)) {
n_weight = reports1[i,]$n_weight
n_weights = reports1[reports1$corp_code == reports1[i,]$corp_code,]$n_weight
reports1[i, 'normed_n'] = (n_weight - min(n_weights)) / (max(n_weights) -
min(n_weights))
}
reports1$normed_n_weight = 0
for (i in 1:length(reports1)) {
n_weight = reports1[i,]$n_weight
n_weights = reports1[reports1$corp_code == reports1[i,]$corp_code,]$n_weight
reports1[i, 'normed_n_weight'] = (n_weight - min(n_weights)) / (max(n_weights) -
min(n_weights))
}
plot = ggplot(reports1, aes(x = report_year, y = normed_n_weight, color = corp_name, group = corp_name)) +
geom_line()
ggplotly(plot)
reports1$normed_n_weight = 0
for (i in 1:nrow(reports1)) {
n_weight = reports1[i,]$n_weight
n_weights = reports1[reports1$corp_code == reports1[i,]$corp_code,]$n_weight
reports1[i, 'normed_n_weight'] = (n_weight - min(n_weights)) / (max(n_weights) -
min(n_weights))
}
plot = ggplot(reports1, aes(x = report_year, y = normed_n_weight, color = corp_name, group = corp_name)) +
geom_line()
ggplotly(plot)
# 년도와 CSR 키워드 포함 어절의 보고서 내 비중 간 상관계수 계산
with(reports1, cor.test(report_year, normed_n_weight))
# 년도와 CSR 키워드 포함 어절의 보고서 내 사용 빈도 간 상관계수 계산
with(reports1, cor.test(report_year, n))
reports1$normed_n = 0
for (i in 1:nrow(reports1)) {
n = reports1[i,]$n
ns = reports1[reports1$corp_code == reports1[i,]$corp_code,]$n
reports1[i, 'normed_n'] = (n - min(ns)) / (max(ns) -
min(ns))
}
plot = ggplot(reports1, aes(x = report_year, y = normed_n, color = corp_name, group = corp_name)) +
geom_line()
ggplotly(plot)
# 년도와 CSR 키워드 포함 어절의 보고서 내 사용 빈도 간 상관계수 계산
with(reports1, cor.test(report_year, normed_n))
# 년도와 CSR 키워드 포함 어절의 보고서 내 비중 간 상관계수 계산
with(reports1, cor.test(report_year, normed_n_weight))
# 년도와 CSR 키워드 포함 어절의 보고서 내 사용 빈도 간 상관계수 계산
with(reports1, cor.test(report_year, normed_n))
# 보고서 목록 데이터에 위에서 계산한 외국인 투자자 지분율의 평균을 합친다.
reports1$forign_own_percent_mean = 0
for (i in 1:nrow(reports1)) {
forign_own_percent_mean = (
summrized_stock_data %>%
filter(
year == reports1[i, ]$report_year &
stock_code == reports1[i, ]$stock_code
) %>%
slice(1)
)$forign_own_percent_mean
# 주가 데이터가 없는 경우도 있음
if (length(forign_own_percent_mean) == 0) {
reports1[i, 'forign_own_percent_mean'] = NA
} else {
reports1[i, 'forign_own_percent_mean'] = forign_own_percent_mean
}
}
reports1$normed_forign_own_percent_mean = 0
for (i in 1:nrow(reports1)) {
forign_own_percent_mean = reports1[i, ]$normed_forign_own_percent_mean
forign_own_percent_means = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$forign_own_percent_mean
reports1[i, 'normed_forign_own_percent_mean'] =
(forign_own_percent_mean - min(forign_own_percent_means)) / (max(forign_own_percent_means) -
min(forign_own_percent_means))
}
for (i in 1:nrow(reports1)) {
forign_own_percent_mean = reports1[i, ]$forign_own_percent_mean
forign_own_percent_means = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$forign_own_percent_mean
reports1[i, 'normed_forign_own_percent_mean'] =
(forign_own_percent_mean - min(forign_own_percent_means)) / (max(forign_own_percent_means) -
min(forign_own_percent_means))
}
for (i in 1:nrow(reports1)) {
mean = reports1[i,]$forign_own_percent_mean
means = reports1[reports1$corp_code == reports1[i,]$corp_code,]$forign_own_percent_mean
reports1[i, 'normed_forign_own_percent_mean'] =
(mean - min(means)) / (max(means) -
min(means))
}
reports1[is.na(reports1$forign_own_percent_mean), forign_own_percent_mean] = 0
reports1[is.na(reports1$forign_own_percent_mean), 'forign_own_percent_mean'] = 0
reports1[is.na(reports1$forign_own_percent_mean), 'forign_own_percent_mean'] = NA
for (i in 1:nrow(reports1)) {
mean = reports1[i,]$forign_own_percent_mean
means = reports1[reports1$corp_code == reports1[i,]$corp_code,]$forign_own_percent_mean
reports1[i, 'normed_forign_own_percent_mean'] =
(mean - min(means, na.rm = T)) / (max(means, na.rm = T) -
min(means, na.rm = T))
}
plot = reports1 %>%
ggplot(aes(x = normed_forign_own_percent_mean, y = n)) +
geom_point(alpha = 2/3)
ggplotly(plot)
plot = reports1 %>%
ggplot(aes(x = normed_forign_own_percent_mean, y = normed_n)) +
geom_point(alpha = 2/3)
ggplotly(plot)
plot = reports1 %>%
ggplot(aes(x = normed_forign_own_percent_mean, y = normed_n_weight)) +
geom_point(alpha = 2/3)
ggplotly(plot)
# `csr 키워드 포함 어절 수`와 `종목별 연간 외국인 투자자 지분율 평균` 간의 상관계수 계산
with(reports1, cor.test(normed_n, normed_forign_own_percent_mean))
# `csr 키워드 포함 어절 출현빈도`와 `종목별 연간 외국인 투자자 지분율 평균` 간의 상관계수 계산
with(reports1, cor.test(normed_n_weight, normed_forign_own_percent_mean))
reports1$normed_mean_marcap = 0
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
marcap = reports1[i, ]$mean_marcap
marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(mean - min(marcaps, na.rm = T)) / (max(marcaps, na.rm = T) -
min(marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
marcap = reports1[i, ]$mean_marcap
marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(mean - min(marcaps, na.rm = T)) / (max(marcaps, na.rm = T) -
min(marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
marcap = reports1[i, ]$mean_marcap
marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(marcap - min(marcaps, na.rm = T)) / (max(marcaps, na.rm = T) -
min(marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1[is.na(reports1$mean_marcap), ]
# 보고서 목록에 시가총액 열 추가
reports1$marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = (
summarised_marcap %>%
filter(year == reports1[i,]$report_year &
Code == reports1[i,]$stock_code) %>%
slice(1)
)$mean_marcap
# 주가 데이터가 없는 경우도 있음
if (length(mean_marcap) == 0) {
reports1[i, 'mean_marcap'] = NA
} else {
reports1[i, 'mean_marcap'] = mean_marcap
}
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
print(length(mean_marcaps))
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
print(length(mean_marcaps) == 0)
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
if(length(mean_marcaps) == 0) print(i)
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
print(min(mean_marcaps, na.rm = T))
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
print(i)
print(min(mean_marcaps, na.rm = T))
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1$normed_mean_marcap = 0
for (i in 1:nrow(reports1)) {
mean_marcap = reports1[i, ]$mean_marcap
mean_marcaps = reports1[reports1$corp_code == reports1[i, ]$corp_code, ]$mean_marcap
reports1[i, 'normed_mean_marcap'] =
(mean_marcap - min(mean_marcaps, na.rm = T)) / (max(mean_marcaps, na.rm = T) -
min(mean_marcaps, na.rm = T))
}
reports1 %>% ggplot(aes(x = report_year, y = normed_mean_marcap)) + geom_point()
reports1 %>% ggplot(aes(x = report_year, y = normed_mean_marcap)) + geom_line()
reports1 %>% ggplot(aes(x = report_year, y = normed_mean_marcap, group = corp_code)) + geom_line()
reports1 %>% ggplot(aes(x = normed_n_weight, y = normed_mean_marcap, group = corp_code)) + geom_line()
reports1 %>% ggplot(aes(x = normed_n_weight, y = normed_mean_marcap,)) + geom_point()
reports1 %>% ggplot(aes(x = normed_n, y = normed_mean_marcap)) + geom_point()
reports1 %>% ggplot(aes(
x = report_year,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_line()
plot = reports1 %>% ggplot(aes(
x = report_year,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_line()
ggplotly(plot)
plot = head(reports1, 10) %>% ggplot(aes(
x = report_year,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_line()
ggplotly(plot)
head(reports1, 10)
plot = head(reports1, 100) %>% ggplot(aes(
x = report_year,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_line()
ggplotly(plot)
ggplotly(plot)
View(reports1)
plot = reports1 %>% ggplot(aes(
x = normed_n,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_line()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(ylim = c(0.01, 99.9))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(ylim = c(0.001, 0.991))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(ylim = c(0.001, 0.999))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.001, 0.999), ylim = c(0.001, 0.999))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
# `csr 키워드 포함 어절 수`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
with(reports1, cor.test(normed_n_weight, normed_mean_marcap))
# `csr 키워드 포함 어절 출현빈도`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
with(reports1, cor.test(normed_n, normed_mean_marcap))
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point()
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.0001, 1 - 0.0001), ylim = c(0.0001, 1 - 0.0001))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.001, 1 - 0.001), ylim = c(0.001, 1 - 0.001))
ggplotly(plot)
1 - 0.001
0.999
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.001, 0.999), ylim = c(0.001, 0.999))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.001, 0.998), ylim = c(0.001, 0.998))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.001, 0.5), ylim = c(0.001, 0.5))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.01, 0.9), ylim = c(0.01, 0.9))
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.01, 0.09), ylim = c(0.01, 0.09))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.01, 0.99), ylim = c(0.01, 0.99))
ggplotly(plot)
plot = reports1 %>% ggplot(aes(
x = normed_n_weight,
y = normed_mean_marcap,
color = corp_name,
group = corp_name
)) + geom_point() + coord_cartesian(xlim = c(0.1, 0.9), ylim = c(0.1, 0.9))
ggplotly(plot)
# `csr 키워드 포함 어절 수`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
reports1 %>%
filter(normed_n_weight >= 0.05 & normed_n_weight <= 0.95 ) %>%
filter(normed_mean_marcap >= 0.05 & normed_mean_marcap <= 0.95 ) %>%
with(cor.test(normed_n_weight, normed_mean_marcap))
# `csr 키워드 포함 어절 수`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
reports1 %>%
filter(normed_n_weight >= 0.1 & normed_n_weight <= 0.9 ) %>%
filter(normed_mean_marcap >= 0.1 & normed_mean_marcap <= 0.9 ) %>%
with(cor.test(normed_n_weight, normed_mean_marcap))
# `csr 키워드 포함 어절 출현빈도`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
reports1 %>%
filter(normed_n >= 0.05 & normed_n <= 0.95 ) %>%
filter(normed_mean_marcap >= 0.05 & normed_mean_marcap <= 0.95 ) %>%
with(cor.test(normed_n, normed_mean_marcap))
# `csr 키워드 포함 어절 수`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
reports1 %>%
filter(normed_n_weight >= 0.05 & normed_n_weight <= 0.95 ) %>%
filter(normed_mean_marcap >= 0.05 & normed_mean_marcap <= 0.95 ) %>%
with(cor.test(normed_n_weight, normed_mean_marcap))
# `csr 키워드 포함 어절 출현빈도`와 `종목별 연간 시가총액 평균` 간 상관계수 계산
reports1 %>%
filter(normed_n >= 0.05 & normed_n <= 0.95 ) %>%
filter(normed_mean_marcap >= 0.05 & normed_mean_marcap <= 0.95 ) %>%
with(cor.test(normed_n, normed_mean_marcap))
paste0(
'http://opendart.fss.or.kr/api/list.json?crtfc_key=',
crtfc_key,
'&corp_code=',
dart_code,
'&bgn_de=20130101&pblntf_ty=A&page_count=100&last_reprt_at=Y'
)
